/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsIndexImport } from './routes/projects/index'
import { Route as ProjectsCreateImport } from './routes/projects/create'
import { Route as ProjectsProjectIdImport } from './routes/projects/$project-id'
import { Route as ProjectsProjectIdTestSuitesEditImport } from './routes/projects_/$project-id/test-suites/edit'
import { Route as ProjectsProjectIdTestSuitesCreateImport } from './routes/projects_/$project-id/test-suites/create'
import { Route as ProjectsProjectIdTestSuitesSuiteIdImport } from './routes/projects_/$project-id/test-suites/$suite-id'
import { Route as ProjectsProjectIdTestCasesCreateImport } from './routes/projects_/$project-id/test-cases/create'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsIndexRoute = ProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsCreateRoute = ProjectsCreateImport.update({
  id: '/projects/create',
  path: '/projects/create',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsProjectIdRoute = ProjectsProjectIdImport.update({
  id: '/projects/$project-id',
  path: '/projects/$project-id',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsProjectIdTestSuitesEditRoute =
  ProjectsProjectIdTestSuitesEditImport.update({
    id: '/projects_/$project-id/test-suites/edit',
    path: '/projects/$project-id/test-suites/edit',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdTestSuitesCreateRoute =
  ProjectsProjectIdTestSuitesCreateImport.update({
    id: '/projects_/$project-id/test-suites/create',
    path: '/projects/$project-id/test-suites/create',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdTestSuitesSuiteIdRoute =
  ProjectsProjectIdTestSuitesSuiteIdImport.update({
    id: '/projects_/$project-id/test-suites/$suite-id',
    path: '/projects/$project-id/test-suites/$suite-id',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdTestCasesCreateRoute =
  ProjectsProjectIdTestCasesCreateImport.update({
    id: '/projects_/$project-id/test-cases/create',
    path: '/projects/$project-id/test-cases/create',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/projects/$project-id': {
      id: '/projects/$project-id'
      path: '/projects/$project-id'
      fullPath: '/projects/$project-id'
      preLoaderRoute: typeof ProjectsProjectIdImport
      parentRoute: typeof rootRoute
    }
    '/projects/create': {
      id: '/projects/create'
      path: '/projects/create'
      fullPath: '/projects/create'
      preLoaderRoute: typeof ProjectsCreateImport
      parentRoute: typeof rootRoute
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects_/$project-id/test-cases/create': {
      id: '/projects_/$project-id/test-cases/create'
      path: '/projects/$project-id/test-cases/create'
      fullPath: '/projects/$project-id/test-cases/create'
      preLoaderRoute: typeof ProjectsProjectIdTestCasesCreateImport
      parentRoute: typeof rootRoute
    }
    '/projects_/$project-id/test-suites/$suite-id': {
      id: '/projects_/$project-id/test-suites/$suite-id'
      path: '/projects/$project-id/test-suites/$suite-id'
      fullPath: '/projects/$project-id/test-suites/$suite-id'
      preLoaderRoute: typeof ProjectsProjectIdTestSuitesSuiteIdImport
      parentRoute: typeof rootRoute
    }
    '/projects_/$project-id/test-suites/create': {
      id: '/projects_/$project-id/test-suites/create'
      path: '/projects/$project-id/test-suites/create'
      fullPath: '/projects/$project-id/test-suites/create'
      preLoaderRoute: typeof ProjectsProjectIdTestSuitesCreateImport
      parentRoute: typeof rootRoute
    }
    '/projects_/$project-id/test-suites/edit': {
      id: '/projects_/$project-id/test-suites/edit'
      path: '/projects/$project-id/test-suites/edit'
      fullPath: '/projects/$project-id/test-suites/edit'
      preLoaderRoute: typeof ProjectsProjectIdTestSuitesEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects/$project-id': typeof ProjectsProjectIdRoute
  '/projects/create': typeof ProjectsCreateRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/$project-id/test-cases/create': typeof ProjectsProjectIdTestCasesCreateRoute
  '/projects/$project-id/test-suites/$suite-id': typeof ProjectsProjectIdTestSuitesSuiteIdRoute
  '/projects/$project-id/test-suites/create': typeof ProjectsProjectIdTestSuitesCreateRoute
  '/projects/$project-id/test-suites/edit': typeof ProjectsProjectIdTestSuitesEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects/$project-id': typeof ProjectsProjectIdRoute
  '/projects/create': typeof ProjectsCreateRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/$project-id/test-cases/create': typeof ProjectsProjectIdTestCasesCreateRoute
  '/projects/$project-id/test-suites/$suite-id': typeof ProjectsProjectIdTestSuitesSuiteIdRoute
  '/projects/$project-id/test-suites/create': typeof ProjectsProjectIdTestSuitesCreateRoute
  '/projects/$project-id/test-suites/edit': typeof ProjectsProjectIdTestSuitesEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects/$project-id': typeof ProjectsProjectIdRoute
  '/projects/create': typeof ProjectsCreateRoute
  '/projects/': typeof ProjectsIndexRoute
  '/projects_/$project-id/test-cases/create': typeof ProjectsProjectIdTestCasesCreateRoute
  '/projects_/$project-id/test-suites/$suite-id': typeof ProjectsProjectIdTestSuitesSuiteIdRoute
  '/projects_/$project-id/test-suites/create': typeof ProjectsProjectIdTestSuitesCreateRoute
  '/projects_/$project-id/test-suites/edit': typeof ProjectsProjectIdTestSuitesEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/projects/$project-id'
    | '/projects/create'
    | '/projects'
    | '/projects/$project-id/test-cases/create'
    | '/projects/$project-id/test-suites/$suite-id'
    | '/projects/$project-id/test-suites/create'
    | '/projects/$project-id/test-suites/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/projects/$project-id'
    | '/projects/create'
    | '/projects'
    | '/projects/$project-id/test-cases/create'
    | '/projects/$project-id/test-suites/$suite-id'
    | '/projects/$project-id/test-suites/create'
    | '/projects/$project-id/test-suites/edit'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/projects/$project-id'
    | '/projects/create'
    | '/projects/'
    | '/projects_/$project-id/test-cases/create'
    | '/projects_/$project-id/test-suites/$suite-id'
    | '/projects_/$project-id/test-suites/create'
    | '/projects_/$project-id/test-suites/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRoute
  ProjectsCreateRoute: typeof ProjectsCreateRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  ProjectsProjectIdTestCasesCreateRoute: typeof ProjectsProjectIdTestCasesCreateRoute
  ProjectsProjectIdTestSuitesSuiteIdRoute: typeof ProjectsProjectIdTestSuitesSuiteIdRoute
  ProjectsProjectIdTestSuitesCreateRoute: typeof ProjectsProjectIdTestSuitesCreateRoute
  ProjectsProjectIdTestSuitesEditRoute: typeof ProjectsProjectIdTestSuitesEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ProjectsProjectIdRoute: ProjectsProjectIdRoute,
  ProjectsCreateRoute: ProjectsCreateRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  ProjectsProjectIdTestCasesCreateRoute: ProjectsProjectIdTestCasesCreateRoute,
  ProjectsProjectIdTestSuitesSuiteIdRoute:
    ProjectsProjectIdTestSuitesSuiteIdRoute,
  ProjectsProjectIdTestSuitesCreateRoute:
    ProjectsProjectIdTestSuitesCreateRoute,
  ProjectsProjectIdTestSuitesEditRoute: ProjectsProjectIdTestSuitesEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/projects/$project-id",
        "/projects/create",
        "/projects/",
        "/projects_/$project-id/test-cases/create",
        "/projects_/$project-id/test-suites/$suite-id",
        "/projects_/$project-id/test-suites/create",
        "/projects_/$project-id/test-suites/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/projects/$project-id": {
      "filePath": "projects/$project-id.tsx"
    },
    "/projects/create": {
      "filePath": "projects/create.tsx"
    },
    "/projects/": {
      "filePath": "projects/index.tsx"
    },
    "/projects_/$project-id/test-cases/create": {
      "filePath": "projects_/$project-id/test-cases/create.tsx"
    },
    "/projects_/$project-id/test-suites/$suite-id": {
      "filePath": "projects_/$project-id/test-suites/$suite-id.tsx"
    },
    "/projects_/$project-id/test-suites/create": {
      "filePath": "projects_/$project-id/test-suites/create.tsx"
    },
    "/projects_/$project-id/test-suites/edit": {
      "filePath": "projects_/$project-id/test-suites/edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
